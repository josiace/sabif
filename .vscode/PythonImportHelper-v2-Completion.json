[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Acceuilperso",
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "isExtraImport": true,
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "Contenus",
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "isExtraImport": true,
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "BlogImage",
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "isExtraImport": true,
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "Visite",
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "isExtraImport": true,
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "acceuil",
        "description": "acceuil",
        "isExtraImport": true,
        "detail": "acceuil",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "connexion",
        "description": "connexion",
        "isExtraImport": true,
        "detail": "connexion",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "acceuil.migrations.0001_initial",
        "description": "acceuil.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Acceuilperso',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('titre', models.CharField(max_length=100)),",
        "detail": "acceuil.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "BlogImageInline",
        "kind": 6,
        "importPath": "acceuil.admin",
        "description": "acceuil.admin",
        "peekOfCode": "class BlogImageInline(admin.TabularInline):\n\tmodel = BlogImage\n\textra = 1\nclass ContenusAdmin(admin.ModelAdmin):\n\tinlines = [BlogImageInline]\nadmin.site.register(Contenus, ContenusAdmin)\nadmin.site.register(Acceuilperso)\nadmin.site.register(BlogImage)\nadmin.site.register(Visite)",
        "detail": "acceuil.admin",
        "documentation": {}
    },
    {
        "label": "ContenusAdmin",
        "kind": 6,
        "importPath": "acceuil.admin",
        "description": "acceuil.admin",
        "peekOfCode": "class ContenusAdmin(admin.ModelAdmin):\n\tinlines = [BlogImageInline]\nadmin.site.register(Contenus, ContenusAdmin)\nadmin.site.register(Acceuilperso)\nadmin.site.register(BlogImage)\nadmin.site.register(Visite)",
        "detail": "acceuil.admin",
        "documentation": {}
    },
    {
        "label": "\tmodel",
        "kind": 5,
        "importPath": "acceuil.admin",
        "description": "acceuil.admin",
        "peekOfCode": "\tmodel = BlogImage\n\textra = 1\nclass ContenusAdmin(admin.ModelAdmin):\n\tinlines = [BlogImageInline]\nadmin.site.register(Contenus, ContenusAdmin)\nadmin.site.register(Acceuilperso)\nadmin.site.register(BlogImage)\nadmin.site.register(Visite)",
        "detail": "acceuil.admin",
        "documentation": {}
    },
    {
        "label": "\textra",
        "kind": 5,
        "importPath": "acceuil.admin",
        "description": "acceuil.admin",
        "peekOfCode": "\textra = 1\nclass ContenusAdmin(admin.ModelAdmin):\n\tinlines = [BlogImageInline]\nadmin.site.register(Contenus, ContenusAdmin)\nadmin.site.register(Acceuilperso)\nadmin.site.register(BlogImage)\nadmin.site.register(Visite)",
        "detail": "acceuil.admin",
        "documentation": {}
    },
    {
        "label": "\tinlines",
        "kind": 5,
        "importPath": "acceuil.admin",
        "description": "acceuil.admin",
        "peekOfCode": "\tinlines = [BlogImageInline]\nadmin.site.register(Contenus, ContenusAdmin)\nadmin.site.register(Acceuilperso)\nadmin.site.register(BlogImage)\nadmin.site.register(Visite)",
        "detail": "acceuil.admin",
        "documentation": {}
    },
    {
        "label": "AcceuilConfig",
        "kind": 6,
        "importPath": "acceuil.apps",
        "description": "acceuil.apps",
        "peekOfCode": "class AcceuilConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'acceuil'",
        "detail": "acceuil.apps",
        "documentation": {}
    },
    {
        "label": "Visite",
        "kind": 6,
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "peekOfCode": "class Visite(models.Model):\n    date = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"Visite du {self.date.strftime('%d/%m/%Y %H:%M:%S')}\"\n# Create your models here.\nclass Contenus(models.Model):\n    titre = models.CharField(max_length=100)\n    blog = models.TextField()\n    auteur = models.CharField(max_length=100)\n    mail = models.EmailField()",
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "Contenus",
        "kind": 6,
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "peekOfCode": "class Contenus(models.Model):\n    titre = models.CharField(max_length=100)\n    blog = models.TextField()\n    auteur = models.CharField(max_length=100)\n    mail = models.EmailField()\n    date_creation = models.DateTimeField(auto_now_add=True)\n    lien = models.URLField(blank=True)\n    num = models.IntegerField(blank=True)\n    def __str__(self):\n        return self.titre",
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "BlogImage",
        "kind": 6,
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "peekOfCode": "class BlogImage(models.Model):\n    contenu = models.ForeignKey(Contenus, related_name='images', on_delete=models.CASCADE)\n    image = models.ImageField(upload_to='blog_images/')\n    def __str__(self):\n        return f\"Image de {self.contenu.titre}\"\nclass Acceuilperso(models.Model):\n    titre=models.CharField(max_length=100)\n    description=models.TextField()\n    disclaimer=models.TextField(blank=True)\n    def __str__(self):",
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "Acceuilperso",
        "kind": 6,
        "importPath": "acceuil.models",
        "description": "acceuil.models",
        "peekOfCode": "class Acceuilperso(models.Model):\n    titre=models.CharField(max_length=100)\n    description=models.TextField()\n    disclaimer=models.TextField(blank=True)\n    def __str__(self):\n        return self.titre",
        "detail": "acceuil.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "acceuil.urls",
        "description": "acceuil.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.acceuil, name='acceuil'),\n    path('blogs/', views.contenu , name='blogs'),\n]",
        "detail": "acceuil.urls",
        "documentation": {}
    },
    {
        "label": "contenu",
        "kind": 2,
        "importPath": "acceuil.views",
        "description": "acceuil.views",
        "peekOfCode": "def contenu(request):\n    query = request.GET.get('q', '')\n    if query:\n        contenus = Contenus.objects.filter(titre__icontains=query)\n    else:\n        contenus = Contenus.objects.all()\n    return render(request, 'blogs.html', {'contenus': contenus})\ndef acceuil(request):\n    # Enregistre une visite à chaque affichage\n    Visite.objects.create()",
        "detail": "acceuil.views",
        "documentation": {}
    },
    {
        "label": "acceuil",
        "kind": 2,
        "importPath": "acceuil.views",
        "description": "acceuil.views",
        "peekOfCode": "def acceuil(request):\n    # Enregistre une visite à chaque affichage\n    Visite.objects.create()\n    acceuils = Acceuilperso.objects.all()\n    total_visites = Visite.objects.count()\n    return render(request, 'acceuil.html', {'acceuils': acceuils, 'total_visites': total_visites})",
        "detail": "acceuil.views",
        "documentation": {}
    },
    {
        "label": "ConnexionConfig",
        "kind": 6,
        "importPath": "connexion.apps",
        "description": "connexion.apps",
        "peekOfCode": "class ConnexionConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'connexion'",
        "detail": "connexion.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "connexion.urls",
        "description": "connexion.urls",
        "peekOfCode": "urlpatterns = [\n    path('creer/', views.creer, name='creer'),\n    path('connecter/', views.connecter , name='connecter'),\n    path('mon/', views.mon, name='mon'),\n]",
        "detail": "connexion.urls",
        "documentation": {}
    },
    {
        "label": "creer",
        "kind": 2,
        "importPath": "connexion.views",
        "description": "connexion.views",
        "peekOfCode": "def creer(request):\n    return render(request, 'creat_compt.html',)\ndef connecter(request):\n    return render(request, 'compt.html',)\ndef mon(request):\n    return render(request, 'mon.html')",
        "detail": "connexion.views",
        "documentation": {}
    },
    {
        "label": "connecter",
        "kind": 2,
        "importPath": "connexion.views",
        "description": "connexion.views",
        "peekOfCode": "def connecter(request):\n    return render(request, 'compt.html',)\ndef mon(request):\n    return render(request, 'mon.html')",
        "detail": "connexion.views",
        "documentation": {}
    },
    {
        "label": "mon",
        "kind": 2,
        "importPath": "connexion.views",
        "description": "connexion.views",
        "peekOfCode": "def mon(request):\n    return render(request, 'mon.html')",
        "detail": "connexion.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "tuto.asgi",
        "description": "tuto.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "tuto.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Security\nSECRET_KEY = os.environ.get('SECRET_KEY', 'clé-temporaire-pour-local')\nDEBUG = os.environ.get('DEBUG', 'True') == 'True'\nALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')\nCSRF_TRUSTED_ORIGINS = os.environ.get(\n    'CSRF_TRUSTED_ORIGINS',\n    'http://127.0.0.1,https://127.0.0.1'\n).split(',')\n# Installed apps",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get('SECRET_KEY', 'clé-temporaire-pour-local')\nDEBUG = os.environ.get('DEBUG', 'True') == 'True'\nALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')\nCSRF_TRUSTED_ORIGINS = os.environ.get(\n    'CSRF_TRUSTED_ORIGINS',\n    'http://127.0.0.1,https://127.0.0.1'\n).split(',')\n# Installed apps\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "DEBUG = os.environ.get('DEBUG', 'True') == 'True'\nALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')\nCSRF_TRUSTED_ORIGINS = os.environ.get(\n    'CSRF_TRUSTED_ORIGINS',\n    'http://127.0.0.1,https://127.0.0.1'\n).split(',')\n# Installed apps\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '127.0.0.1,localhost').split(',')\nCSRF_TRUSTED_ORIGINS = os.environ.get(\n    'CSRF_TRUSTED_ORIGINS',\n    'http://127.0.0.1,https://127.0.0.1'\n).split(',')\n# Installed apps\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = os.environ.get(\n    'CSRF_TRUSTED_ORIGINS',\n    'http://127.0.0.1,https://127.0.0.1'\n).split(',')\n# Installed apps\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.sitemaps',\n    'acceuil',\n    'connexion',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n# URL configuration",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "ROOT_URLCONF = 'tuto.urls'\n# Templates\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "WSGI_APPLICATION = 'tuto.wsgi.application'\n# Database\nDATABASES = {\n    'default': dj_database_url.config(\n        default=os.environ.get('DATABASE_URL'),\n        conn_max_age=600\n    )\n}\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "DATABASES = {\n    'default': dj_database_url.config(\n        default=os.environ.get('DATABASE_URL'),\n        conn_max_age=600\n    )\n}\n# Password validation\nAUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},\n    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},\n]\n# Internationalization\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "USE_TZ = True\n# Static files\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "STATICFILES_DIRS = [BASE_DIR / 'static']\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'staticfiles'\n# Media files\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "tuto.settings",
        "description": "tuto.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "tuto.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "tuto.urls",
        "description": "tuto.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('acceuil.urls')),\n    path('accounts/', include('connexion.urls')),\n]\nif settings.DEBUG:\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "tuto.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "tuto.wsgi",
        "description": "tuto.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "tuto.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tuto.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]